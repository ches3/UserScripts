{
	"userscript template": {
		"prefix": "userscript",
		"body": [
			"// ==UserScript==",
			"// @name         $1",
			"// @namespace    https://ches3.me/",
			"// @version      $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
			"// @description  $2",
			"// @author       ches3",
			"// @match        $3",
			"// @icon         https://www.google.com/s2/favicons?sz=64&domain=$4",
			"// @grant        none",
			"// ==/UserScript==",
			"",
			"(() => {",
			"  ",
			"})();",
		],
		"scope": "typescript",
	},
	"asyncQuerySelector snippet": {
		"prefix": "asyncQuerySelector",
    "body": [
      "const asyncQuerySelector = (selector: string, timeout = 10000) => {",
      "  return new Promise<Element>((resolve, reject) => {",
      "    const interval = setInterval(() => {",
      "      const element = document.querySelector(selector);",
      "      if (element) {",
      "        clearInterval(interval);",
      "        resolve(element);",
      "      }",
      "    }, 500);",
      "    setTimeout(() => {",
      "      clearInterval(interval);",
      "      reject(new Error(`Timeout: \\${selector}`));",
      "    }, timeout);",
      "  });",
      "};",
    ],
		"scope": "typescript",
	},
	"asyncQuerySelectorAll snippet": {
		"prefix": "asyncQuerySelectorAll",
    "body": [
      "const asyncQuerySelectorAll = (selector: string, timeout = 10000) => {",
      "  return new Promise<NodeListOf<Element>>((resolve, reject) => {",
      "    const interval = setInterval(() => {",
      "      const elements = document.querySelectorAll(selector);",
      "      if (elements && elements.length > 0) {",
      "        clearInterval(interval);",
      "        resolve(elements);",
      "      }",
      "    }, 500);",
      "    setTimeout(() => {",
      "      clearInterval(interval);",
      "      reject(new Error(`Timeout: \\${selector}`));",
      "    }, timeout);",
      "  });",
      "};",
    ],
		"scope": "typescript",
	},
}
